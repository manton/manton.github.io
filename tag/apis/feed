<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Manton Reece &#187; apis</title>
	<atom:link href="http://www.manton.org/tag/apis/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Wed, 06 Jan 2016 17:11:57 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=4.3.1</generator>
	<item>
		<title>Return to open APIs</title>
		<link>http://www.manton.org/2014/10/return-to-open-apis.html</link>
		<comments>http://www.manton.org/2014/10/return-to-open-apis.html#comments</comments>
		<pubDate>Wed, 01 Oct 2014 18:24:13 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[apis]]></category>
		<category><![CDATA[rss]]></category>
		<category><![CDATA[snippets]]></category>
		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=2300.html</guid>
		<description><![CDATA[In 2014, web app APIs basically look like this: JSON or XML API layer for a web site&#8217;s content and functionality. Potential client developers must register with the web site and get some kind of API key for access. OAuth is used to grant access without giving out passwords. A more cynical view of that [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>In 2014, web app APIs basically look like this:</p>
<ul>
<li>JSON or XML API layer for a web site&#8217;s content and functionality.</li>
<li>Potential client developers must register with the web site and get some kind of API key for access.</li>
<li>OAuth is used to grant access without giving out passwords.</li>
</ul>
<p>A more cynical view of that last point could be rewritten as: OAuth is used to control and limit access so that the API is inaccessible without approval from the web site.</p>
<p>This all seems fairly normal today. I required an API key for Tweet Marker because that&#8217;s just what you did, especially if you wanted to charge or limit an API. But it didn&#8217;t always used to be this way — remember when you could hit the Twitter API with just a user&#8217;s password? — and it doesn&#8217;t have to be this way forever.</p>
<p>For my next web app I&#8217;m going to have an API that is more open, requiring no app registration. Instead it will be <em>user-centric</em>, with password tokens that a user can paste into their favorite compatible app for authentication. (My web app doesn&#8217;t have traditional passwords at all.)</p>
<p>Not having API keys removes a whole set of complexity: no need to write all the backend code to support managing them, no need for developers to register, no need for me to judge who should get access. Whenever possible, APIs should be nearly as open as the normal web, where Safari and &#8220;curl&#8221; don&#8217;t need to register with a web site just to download its home page. Users are in the best position to know which apps should get access to their account anyway.</p>
<p>If we can loosen APIs, I think it makes the web better. <a href="http://scripting.com/2014/09/28/#a1411931064">Dave Winer takes it one step further</a>:</p>
<blockquote><p>
  &#8220;What we really need, and I hope to help make happen, is a network based on open syndication of content. Then there is no one to ask for an API, because there&#8217;s no one in charge.&#8221;
</p></blockquote>
<p>I&#8217;ve been calling my latest project halfway decentralized. I&#8217;m still in charge, but just barely.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2014/10/return-to-open-apis.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Mike Ash on private APIs</title>
		<link>http://www.manton.org/2009/01/mike_ash_on.html</link>
		<comments>http://www.manton.org/2009/01/mike_ash_on.html#comments</comments>
		<pubDate>Sat, 03 Jan 2009 15:01:36 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[apis]]></category>
		<category><![CDATA[mikeash]]></category>
		<category><![CDATA[private]]></category>
		<category><![CDATA[quicklook]]></category>

		<guid isPermaLink="false">http://www.manton.org/2009/01/mike_ash_on.html</guid>
		<description><![CDATA[Mike Ash has been rocking with his weekly Friday Q&#38;As. From the &#8220;latest about using private APIs&#8221;:http://www.mikeash.com/?page=pyblog/friday-qa-2009-01-02.html: &#8220;Remember that the cost is not just to you, but to your users. If you&#8217;re really unlucky the break will be so bad that it&#8217;s not even obvious that it&#8217;s your fault, and they&#8217;ll figure it out only [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Mike Ash has been rocking with his weekly Friday Q&amp;As. From the &#8220;latest about using private APIs&#8221;:http://www.mikeash.com/?page=pyblog/friday-qa-2009-01-02.html:</p>
<blockquote><p>&#8220;Remember that the cost is not just to you, but to your users. If you&#8217;re really unlucky the break will be so bad that it&#8217;s not even obvious that it&#8217;s your fault, and they&#8217;ll figure it out only after much head-scratching. Once they do figure it out, they will hate you if your fix doesn&#8217;t come really fast.&#8221;</p></blockquote>
<p>My new app (not officially announced yet &mdash; more later) currently uses Quick Look as a significant part of the user interface. Quick Look is a private API on 10.5, but my hope was that surely it would be made public by 10.6. If I coded correctly for both cases (I have a 10.6 seed running here I can test against), then I could safely release the product and be reasonably certain that nothing would be break.</p>
<p>I&#8217;m now rethinking that, both because it looks increasingly like Quick Look will remain a private API even in Snow Leopard, and because I&#8217;ve gotten feedback that it&#8217;s not a perfect fit for how I&#8217;m using it anyway. At the very least I will turn Quick Look into a secondary option, something that wouldn&#8217;t be missed if it went away, and roll my own preview UI to be the default.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2009/01/mike_ash_on.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>

<!-- Dynamic page generated in 1.414 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-01-06 13:48:23 -->
