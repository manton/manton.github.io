<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>archiving &#8211; Manton Reece</title>
	<atom:link href="http://www.manton.org/tag/archiving/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Tue, 13 Dec 2016 22:36:17 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Talkshow.im archives</title>
		<link>http://www.manton.org/2016/11/talkshow-im-archives.html</link>
		<pubDate>Sat, 26 Nov 2016 18:00:44 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Technology]]></category>
		<category><![CDATA[archiving]]></category>
		<category><![CDATA[chat]]></category>
		<category><![CDATA[export]]></category>
		<category><![CDATA[poplife]]></category>
		<category><![CDATA[sixcolors]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=4498</guid>
		<description><![CDATA[Shutting down a web site correctly isn&#8217;t easy. When Talkshow announced they were closing, I was surprised. Six months is a limited time to launch, get traction, and then wind down. But I was glad that they&#8217;d let any show be exported as an archive. The archives aren&#8217;t available for very long. If you hosted a [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Shutting down a web site correctly isn&#8217;t easy. When <a href="https://medium.com/talkshow/we-are-shutting-down-talkshow-on-december-1-98ea1dacf3c8">Talkshow announced</a> they were closing, I was surprised. Six months is a limited time to launch, get traction, and then wind down. But I was glad that they&#8217;d let any show be exported as an archive.</p>
<p>The archives aren&#8217;t available for very long. If you hosted a show on Talkshow, you have until December 1st to download it.</p>
<p>I downloaded a couple to see how Talkshow handled it. Just in case no one else grabs them, I&#8217;m copying them here: <a href="http://www.manton.org/archive/talkshow.im/poplife/">Pop Life episode 5</a> with Anil Dash and guest John Gruber, and the <a href="http://www.manton.org/archive/talkshow.im/sixcolors/">Six Colors live coverage</a> for Apple&#8217;s September 7th event. I had Instapaper-ed both of these to read later anyway.</p>
<p>The archive itself is a simple .zip file with HTML, CSS, and user profile images. In the Finder it looks like this:</p>
<p><img src="http://www.manton.org/images/2016/talkshow_im.png" width="600" height="475" alt="Talkshow.im Finder screenshot" /></p>
<p>This self-contained structure makes it very easy to re-share somewhere else. Credit to Talkshow for keeping this simple. But it also strikes me as so easy to keep hosting as static files, I wonder why Talkshow doesn&#8217;t keep the archives available indefinitely, which would preserve any existing links to these shows from the web.</p>
]]></content:encoded>
			</item>
		<item>
		<title>App Store cleanup</title>
		<link>http://www.manton.org/2016/09/app-store-cleanup.html</link>
		<pubDate>Fri, 02 Sep 2016 15:36:48 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Technology]]></category>
		<category><![CDATA[appreview]]></category>
		<category><![CDATA[appstore]]></category>
		<category><![CDATA[archiving]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=4254</guid>
		<description><![CDATA[I&#8217;m in favor of Apple&#8217;s upcoming app store cleanup, as long as they err on the side of keeping an app in the store if it isn&#8217;t clearly broken or abandoned. They should start slow with the obvious cases: crashing on launch, not updated for retina or even 4-inch screens. There&#8217;s a lot of low-hanging fruit [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I&#8217;m in favor of <a href="https://developer.apple.com/support/app-store-improvements/">Apple&#8217;s upcoming app store cleanup</a>, as long as they err on the side of keeping an app in the store if it isn&#8217;t clearly broken or abandoned. They should start slow with the obvious cases: crashing on launch, not updated for retina or even 4-inch screens. There&#8217;s a lot of low-hanging fruit that could be programmatically swept through.</p>
<p><a href="https://david-smith.org/blog/2013/03/21/purging-the-back-catalog/">David Smith wrote about this kind of App Store cleanup</a> over 3 years ago, arguing that Apple could do a lot without getting into the subjective quality of an app:</p>
<blockquote><p>
  Instead, I think Apple would be well served to adopt <em>objective</em> measures for quality or at least freshness to improve the overall quality of the Store. Adopting such a policy wouldn’t fundamentally change the situation for developers; every app they submit already has to be approved. All that this would do is apply some of those same required criteria to the app on an ongoing basis.
</p></blockquote>
<p>John Voorhees picked up on the urgency of Apple&#8217;s new policy <a href="https://www.macstories.net/news/apple-announces-app-store-cleanup/">for an article at MacStories</a>:</p>
<blockquote><p>
  We are well past the time when the number of apps served as meaningful bragging rights for Apple keynotes. The directness in tone and relatively short time frame given to developers to make changes to apps sends a clear message – Apple is serious about cleaning up the App Store.
</p></blockquote>
<p>It remains a challenge to preserve the part of our culture that is captured in old apps. I wish Apple could aggressively curate the App Store <em>and</em> allow old apps to be archived and available. But that&#8217;s far from an Apple priority. For now, it&#8217;s right to present the best possible user experience for App Store customers.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Email archiving with Evernote</title>
		<link>http://www.manton.org/2016/08/email-archiving-with-evernote.html</link>
		<pubDate>Fri, 26 Aug 2016 19:10:54 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Personal]]></category>
		<category><![CDATA[applescript]]></category>
		<category><![CDATA[archiving]]></category>
		<category><![CDATA[email]]></category>
		<category><![CDATA[evernote]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=4198</guid>
		<description><![CDATA[For a long time, I&#8217;ve struggled with having important email archived in one place. I&#8217;ve switched between several clients over the years, from Eudora and Mailsmith and even Cyberdog, in the very early Mac days, to more recently the fairly reliable Apple Mail. Yet I still occasionally lose old email when switching between machines and [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>For a long time, I&#8217;ve struggled with having important email archived in one place. I&#8217;ve switched between several clients over the years, from <a href="https://en.wikipedia.org/wiki/Eudora_(email_client)">Eudora</a> and <a href="https://www.mailsmith.org/">Mailsmith</a> and even <a href="https://en.wikipedia.org/wiki/Cyberdog">Cyberdog</a>, in the very early Mac days, to more recently the fairly reliable Apple Mail. Yet I still occasionally lose old email when switching between machines and not handling the migration properly.</p>
<p>Last year I set out to fix this. While I didn&#8217;t do an exhaustive search of archiving options, the main solutions I considered were:</p>
<ul>
<li><strong>Switch to Gmail.</strong> There are plenty of native clients for Gmail, but I fundamentally don&#8217;t like the idea of an ad-supported email service. I&#8217;m very happy with <a href="https://www.fastmail.com/">Fastmail</a> and want to continue using it.</li>
<li><strong>Local archiving with <a href="http://c-command.com/eaglefiler/">EagleFiler</a>.</strong> This gets the email archived in a central place outside whatever mail client I&#8217;m using, which is great. However, I&#8217;d like something that is focused on cloud search first.</li>
<li><strong>Save to files on Dropbox.</strong> All of my notes are stored on Dropbox, so why not put an email archive there too? But Dropbox doesn&#8217;t seem well-suited to accessing and searching easily.</li>
<li><strong>Save to Evernote.</strong> I&#8217;ve never actively used Evernote for notes. Using Evernote for email would keep the email separate from normal notes on Dropbox, and Evernote already has excellent support for forwarding email into their system. I&#8217;d be able to search the archive from my Mac, iPhone, or the web.</li>
</ul>
<p>I&#8217;ve settled into a pretty basic workflow of using Evernote to save any email that looks moderately valuable. This is usually a handful of messages each day, not every email I receive or send. By picking and choosing what gets archived, I can ignore everything else, letting it sit in Mail&#8217;s archive indefinitely or deleting it.</p>
<p><a href="https://gist.github.com/manton/d51e12c93ff00435f929c84890d27717">Here&#8217;s an AppleScript</a> I currently trigger in Mail for any selected message I want to archive. It&#8217;s set to command-shift-S via <a href="http://www.red-sweater.com/fastscripts/">FastScripts</a>. If I&#8217;m away from my Mac, or I want to preserve HTML and inline attachments, I can save an email by forwarding it to a special Evernote email address. (I also pay for Evernote Premium.)</p>
<p>Now that I&#8217;m about a year and thousands of archived messages into this setup, I&#8217;m declaring it a success. I plan to continue using Evernote in this way for years to come. Let&#8217;s just hope they&#8217;re on the right track <a href="http://www.theverge.com/2016/5/4/11584764/evernote-ceo-chris-oneill-interview">with their own business</a>.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Web history and IPFS</title>
		<link>http://www.manton.org/2015/09/web-history-and-ipfs.html</link>
		<pubDate>Fri, 11 Sep 2015 16:51:32 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Technology]]></category>
		<category><![CDATA[archiving]]></category>
		<category><![CDATA[ipfs]]></category>
		<category><![CDATA[neocities]]></category>
		<category><![CDATA[permanence]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=3023</guid>
		<description><![CDATA[Dave Winer on the continued disappearance of old web sites: &#8220;I&#8217;ve tried to sound the alarms. Every day we lose more of the history of the web. Every day is an opportunity to act to make sure we don&#8217;t lose more of it. And we should be putting systems into place to be more sure [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="http://scripting.com/2015/09/11/aGoodDayToThinkAboutWebHistory.html">Dave Winer</a> on the continued disappearance of old web sites:</p>
<blockquote><p>
  &#8220;I&#8217;ve tried to sound the alarms. Every day we lose more of the history of the web. Every day is an opportunity to act to make sure we don&#8217;t lose more of it. And we should be putting systems into place to be more sure we don&#8217;t lose future history.&#8221;
</p></blockquote>
<p>Earlier this week, <a href="http://stevenf.com/2015/09/09/http-is-obsolete-its-time-for-the-distributed-permanent-web/">Steven Frank pointed to</a> a new format and protocol called IPFS, which <a href="https://blog.neocities.org/its-time-for-the-permanent-web.html">Neocities is embracing</a>. Copies of your content would live in multiple nodes across the web instead of in a single, centralized location. From their blog post:</p>
<blockquote><p>
  &#8220;Distributing the web would make it less malleable by a small handful of powerful organizations, and that improves both our freedom and our independence. It also reduces the risk of the &#8216;one giant shutdown&#8217; that takes a massive amount of data with it.&#8221;
</p></blockquote>
<p>I took some time to read through what it can do, and I&#8217;d like to support it for the publishing platform that&#8217;s in my new microblogging project. I don&#8217;t know if it&#8217;s technically feasible yet, but I love that someone is trying to solve this. We just have to start somewhere.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Write locally, mirror globally</title>
		<link>http://www.manton.org/2014/04/write_locally_mirror.html</link>
		<pubDate>Wed, 30 Apr 2014 19:22:01 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Weblogs]]></category>
		<category><![CDATA[archiving]]></category>
		<category><![CDATA[photos]]></category>
		<category><![CDATA[riverfold]]></category>
		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.manton.org/2014/04/write_locally_mirror.html</guid>
		<description><![CDATA[The Atlantic has an interesting essay on whether Twitter is on a slow decline, less useful and meaningful than it once was: “Twitter is the platform that led us into the mobile Internet age. It broke our habit of visiting individual news homepages first thing in the morning, and established behaviors built around real-time news [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="http://www.theatlantic.com/technology/archive/2014/04/a-eulogy-for-twitter/361339/">The Atlantic has an interesting essay</a> on whether Twitter is on a slow decline, less useful and meaningful than it once was:</p>
<blockquote><p>
  “Twitter is the platform that led us into the mobile Internet age. It broke our habit of visiting individual news homepages first thing in the morning, and established behaviors built around real-time news consumption and production. It normalized mobile publishing power. It changed our expectations about how we congregate around shared events. Twitter has done for social publishing what AOL did for email. But nobody has AOL accounts anymore.”
</p></blockquote>
<p>It reminds me of something I brought up on Core Intuition a few months back, wondering if Twitter is a core part of the web, something that would be with us forever, or if it is “just another web site”. When we get into the groove of using a new service for a few years, it’s easy to forget that web sites don’t have a very good track record. Giant sites like Facebook and Tumblr seem to have been with us forever, but my personal blog is older than both.</p>
<p>Think about this: if it’s even <em>possible</em> for Twitter to fail — not likely, just possible — then why are we putting so much of our content there first, where there are <a href="https://dev.twitter.com/terms/api-terms">rules for how tweet text can be used</a>? Storage for all tweets is so massive that there’s no guarantee that other companies will be able to take over the archive if the service has to fold. It’s why I built <a href="http://www.riverfold.com/software/tweetlibrary/">Tweet Library</a> and <a href="http://watermark.io/">Watermark</a> to archive and publish tweets.</p>
<p>Decentralization is the internet’s greatest strength and weakness. There shouldn’t be <a href="https://medium.com">one service</a> to hold all of blogging; each writer should have his or her own domain and web site. But web sites also die all the time from neglect. We need centralized services to index and syndicate content so that it’s <a href="http://www.manton.org/2012/07/permanence.html">preserved</a> and accessible to more people.</p>
<p>Longevity is the next great challenge for the web. All of my work on Riverfold apps is leading this way, from archiving tweets, to <a href="http://sunlit.io/">curating and publishing your best photos</a>, to <a href="http://searchpath.io/">indexing a copy of the text and HTML from your blog</a>. But I’m just one guy with a limited server budget.</p>
<p>It’s time for a new web standard — a metadata format and API that describes how to mirror published content. Maybe it’s part of <a href="http://indiewebcamp.com/POSSE">IndieWebCamp</a>? When I write on my blog, I want the content to flow to GitHub Pages, to the Internet Archive, to Medium. When I post photos, I want the content to flow to Dropbox, to S3, to Flickr. It’s not enough to backup or copy data blindly; the source must point to each mirror, and each mirror service must understand who the creator is and how to find the original data if it still exists.</p>
<p>Unlike a distributed platform that works at the level of raw data, like BitTorrent, this new system should work natively with well-understood common files: text, photos, video, and the glue (usually HTML, Markdown, or JSON) that makes a collection meaningful. Instead of yet another generic sync system, it’s a platform that understands publishing, with adapters to flow content into each mirror’s native storage.</p>
<p>If you accept that this is something worth doing, then every place we put our content must be classified as either an original source or a mirror. And this brings us back to Twitter. Because while I think the next 5 years for Twitter will be strong, I’m not convinced that it will last 50 years. Therefore, Twitter cannot be an original source of data; it must be just one of several mirrors for micro-blogging.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Rambling about Twitter archives</title>
		<link>http://www.manton.org/2012/12/rambling-about-twitter-archives.html</link>
		<pubDate>Sat, 22 Dec 2012 18:00:00 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[adn]]></category>
		<category><![CDATA[archiving]]></category>
		<category><![CDATA[dropbox]]></category>
		<category><![CDATA[longposts]]></category>
		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=3297</guid>
		<description><![CDATA[As 2012 was winding down, I was fascinated with LongPosts.com (built on top of App.net) and so used it to post some thoughts about Twitter archives. The site is gone now, so I&#8217;ve moved the text back to my weblog here, where it belongs anyway. The link to the ADN discussion is here. — future [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><em>As 2012 was winding down, I was fascinated with LongPosts.com (built on top of App.net) and so used it to post some thoughts about Twitter archives. The site is gone now, so I&#8217;ve moved the text back to my weblog here, where it belongs anyway. The link to the ADN discussion <a href="https://alpha.app.net/manton/post/2143060">is here</a>. — future me, January 2016</em></p>
<p>One of the main goals of my web app Watermark is to archive and search tweets and ADN posts, so it was natural for me to implement support for Twitter&#8217;s new archive export format. I finished it last night and linked it from the Watermark account page this evening for all customers.</p>
<p>I had heard that Twitter&#8217;s export included a CSV version before I saw the actual files, so I started work coding an importer based on that, with the assumption that I could tweak it later. Once I saw a real tweets.zip, I had to throw out most of my initial work. The CSV files have two problems:</p>
<ul>
<li>They don&#8217;t properly escape values using quotes, so a comma inside a tweet makes the files more difficult to parse.</li>
<li>They don&#8217;t include some essential Twitter metadata like the reply-to ID.<br />
I switched to using the JSON files and it&#8217;s working well. They&#8217;re JavaScript but not strictly JSON, so you just skip the first line.</li>
</ul>
<p>Since the ZIP archive can be fairly big, instead of uploading in a web browser I let the user choose the file via Dropbox. This was a nice opportunity to try out the <a href="https://www.dropbox.com/developers/chooser">Dropbox Chooser</a>. Then on the server I extract the files and load the data.</p>
<p>Dave Winer is <a href="http://threads2.scripting.com/2012/december/uploadYourTwitterArchive">doing something interesting</a> with archives too. He&#8217;s started linking up other people&#8217;s archives on S3 — both the HTML view and the .zip file. I have a test Watermark account that I&#8217;ve loaded one of these into. It&#8217;s interesting to import multiple archives and have them all merged together and searchable.</p>
<p>For so long we&#8217;ve waited for access to our old tweets. In the meantime I&#8217;ve shipped two products around fixing this limitation, so it&#8217;s especially funny that Twitter finally rolls out archives <em>after I&#8217;ve stopped posting there</em>. (And of course I love that ADN has allowed access to your full post history from the very beginning.) Not entirely sure where all this is going to lead, but I agree with Dave Winer that new apps should be possible now.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Dynamic page generated in 0.273 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-12-13 16:58:46 -->
