<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>coredata &#8211; Manton Reece</title>
	<atom:link href="http://www.manton.org/tag/coredata/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Tue, 13 Dec 2016 20:30:14 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>I don&#8217;t use Core Data either</title>
		<link>http://www.manton.org/2010/02/i_dont_use.html</link>
		<pubDate>Sat, 27 Feb 2010 17:49:19 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[coredata]]></category>
		<category><![CDATA[fmdn]]></category>
		<category><![CDATA[sqlite]]></category>

		<guid isPermaLink="false">http://www.manton.org/2010/02/i_dont_use.html</guid>
		<description><![CDATA[&#8220;Brent writes a fair post&#8221;:http://inessential.com/2010/02/26/on_switching_away_from_core_data on when Core Data is great and when it&#8217;s a performance bottleneck: &#8220;I optimized as much as I could, spent tons of time in Shark, went all multi-threaded with Core Data, switched away from my own queuing system to NSOperationQueue, optimized the XML parsing, etc. But performance and memory use [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>&#8220;Brent writes a fair post&#8221;:http://inessential.com/2010/02/26/on_switching_away_from_core_data on when Core Data is great and when it&#8217;s a performance bottleneck:</p>
<blockquote><p>&#8220;I optimized as much as I could, spent tons of time in Shark, went all multi-threaded with Core Data, switched away from my own queuing system to NSOperationQueue, optimized the XML parsing, etc. But performance and memory use on my first-generation iPod Touch (my development test device) was still not nearly good enough with a big unread count (of around 10,000 items).&#8221;</p></blockquote>
<p>If I had been writing that post I probably wouldn&#8217;t have praised Core Data as much as he did, although admittedly because I rarely use it, and not at all in any shipping applications. Its approach always seemed slightly wrong to me.</p>
<p>My main reason for sticking with SQL directly is that I know by coding at this lower level &mdash; with my own lightweight model objects on top of FMDB and utility methods for working with the Clipstart database &mdash; that if something is slow it&#8217;s my fault. I can fix things that are my fault. I can&#8217;t fix fundamental design problems in Apple&#8217;s code.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Dynamic page generated in 0.223 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-12-13 15:32:00 -->
