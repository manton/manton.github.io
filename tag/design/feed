<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Manton Reece &#187; design</title>
	<atom:link href="http://www.manton.org/tag/design/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Wed, 06 Jan 2016 17:11:57 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=4.3.1</generator>
	<item>
		<title>Watch form over function</title>
		<link>http://www.manton.org/2015/09/watch-form-over-function.html</link>
		<comments>http://www.manton.org/2015/09/watch-form-over-function.html#comments</comments>
		<pubDate>Fri, 04 Sep 2015 14:08:36 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[applewatch]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[samsung]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=3004</guid>
		<description><![CDATA[Everyone&#8217;s thinking the same thing: Samsung&#8217;s new smartwatch looks significantly better than the Apple Watch. Even the rounded scrolling control looks as usable or more usable than Apple&#8217;s digital crown. If Apple tried multiple designs internally, including a round watch — and I&#8217;m sure they did — why did they opt for a nerdy square [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Everyone&#8217;s thinking the same thing: <a href="http://www.theverge.com/2015/9/3/9252787/samsung-gear-s-2-watch-video-hands-on">Samsung&#8217;s new smartwatch</a> looks significantly better than the Apple Watch. Even the rounded scrolling control looks as usable or more usable than Apple&#8217;s digital crown. If Apple tried multiple designs internally, including a round watch — and I&#8217;m sure they did — why did they opt for a nerdy square shape that looks more like a computer than a watch? Especially in a product with such a focus on fashion that they felt the need to charge $10,000 for the high-end models.</p>
<p>Surprisingly, this might be Apple showing they can still choose a functional user experience over purely beautiful form and design. Square looks worse but it&#8217;s just more practical for reading text. The digital crown is a better fit for scrolling vertically.</p>
<p>It&#8217;s rare in the modern era of Apple (post-2000 or so) for the company to sacrifice beauty for usability. The iPhone is always thin at the expense of battery life. Mac scroll bars are hidden in the name of cleanliness. The new MacBook has a single new cable type which no one owns peripherals for. But with the Apple Watch, I think they built something with a foundation that could last for years, despite its initial awkwardness, and square was the right call.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2015/09/watch-form-over-function.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Fun apps don’t need clean code</title>
		<link>http://www.manton.org/2015/07/fun-apps-dont-need-clean-code.html</link>
		<comments>http://www.manton.org/2015/07/fun-apps-dont-need-clean-code.html#comments</comments>
		<pubDate>Mon, 06 Jul 2015 13:23:08 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[code]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[riposte]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=2824</guid>
		<description><![CDATA[Jared Sinclair says that a successful app has nothing to do with writing clean code. Thinking about Riposte: “Riposte, still used and loved by some App.net diehards, has one or two view controllers I wrote that are thousands of lines long. The app was littered with procedures that should have been generalized but got copied-and-pasted [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="http://blog.jaredsinclair.com/post/123277602945/judicious-use-of-shitty-code">Jared Sinclair says</a> that a successful app has nothing to do with writing clean code. Thinking about Riposte:</p>
<blockquote><p>
  “Riposte, still used and loved by some App.net diehards, has one or two view controllers I wrote that are thousands of lines long. The app was littered with procedures that should have been generalized but got copied-and-pasted everywhere. And it didn’t matter.”
</p></blockquote>
<p>Most programmers try to improve their code a little from one project to the next. But obsessing about how the <em>code</em> looks and how it’s structured might mean that you’re not spending enough time worrying about the things that matter even more: what the <em>app</em> looks like and what it does (and ever shipping it).</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2015/07/fun-apps-dont-need-clean-code.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Multiplane</title>
		<link>http://www.manton.org/2013/06/multiplane.html</link>
		<comments>http://www.manton.org/2013/06/multiplane.html#comments</comments>
		<pubDate>Mon, 17 Jun 2013 21:22:59 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Animation]]></category>
		<category><![CDATA[animation]]></category>
		<category><![CDATA[apple]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[disney]]></category>
		<category><![CDATA[ios7]]></category>
		<category><![CDATA[iwerks]]></category>
		<category><![CDATA[ui]]></category>

		<guid isPermaLink="false">http://www.manton.org/2013/06/multiplane.html</guid>
		<description><![CDATA[“We spend a lot of time on a few great things.” — Designed by Apple in California In 1940, Ub Iwerks, the animator behind Walt Disney’s first Mickey Mouse shorts, came back to the Disney studios after a 10-year absence. Ub had famously produced hundreds of drawings alone each day for one of those first [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><em>“We spend a lot of time on a few great things.” — <a href="http://www.apple.com/designed-by-apple/">Designed by Apple in California</a></em></p>
<p>In 1940, Ub Iwerks, the animator behind Walt Disney’s first Mickey Mouse shorts, came back to the Disney studios after a 10-year absence. Ub had famously produced hundreds of drawings alone each day for one of those first Mickey Mouse shorts, but Ub’s return to Disney would also be remembered for his contribution to the technical side of film production, with advances in cameras and special effects. In an industry with extreme specialization — you either did backgrounds, or animation, or ink-and-paint — Ub’s talents bridged both the artistic and technical.</p>
<p>One of Ub’s inventions while away from Disney was called the multiplane camera. Perfected by others leading up to Snow White, in a massive camera stand over 10 feet tall, the multiplane’s innovation was to allow a background to be split into levels. Foreground trees might be painted on the glass of the first level, then the characters sat underneath that, and then farther back layers for a building, with others behind that for hills and sky.</p>
<p>To provide a sense of depth, camera operators could vary the distance between each plane. And movement for each level could be synchronized at different speeds, giving it a beautiful parallax effect. Distant background levels moved more slowly and were naturally blurred and out of focus.</p>
<p>80 years after Ub’s invention, the multiplane is alive in iOS 7. Previous versions of iOS were built on a single plane with raised and textured areas on that surface, like a topographical map except with buttons instead of mountains. iOS 7 is instead designed with multiple flat layers. Each level is strikingly flat, but by layering two or three, spaced apart, Apple has achieved an overall sense of depth.</p>
<p>It’s a return to basics. Simple things can remain simple, readable. When clarity is needed, everything goes flat. But it’s a framework that allows for subtle motion and depth without changing what works about the new, content-first flat design. iOS 7’s control center blurs the layer below. The home screen background sits deeper too, as if only the app icons are touching the screen. Photos scroll under the navigation bar.</p>
<p>Each plane is painted flat as if on glass. There can be no text drop shadows, no textures, without ruining the effect. And the result of this strict metaphor is equally valuable: there are no drop shadows to distract or obscure an app’s real content.</p>
<p>Disney’s multiplane camera, first in a dedicated rig and then recreated in software, lasted for decades, until the era of 3D computer animation. iOS 7’s new look won’t last that long, but the core concepts should carry Apple for years. I really like where they’re headed.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2013/06/multiplane.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Design in grayscale</title>
		<link>http://www.manton.org/2013/04/design_in_grayscale.html</link>
		<comments>http://www.manton.org/2013/04/design_in_grayscale.html#comments</comments>
		<pubDate>Tue, 09 Apr 2013 13:16:22 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[bootstrap]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[grayscale]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">http://www.manton.org/2013/04/design_in_grayscale.html</guid>
		<description><![CDATA[Adam Keys has several tips for programmers, to make our web sites look better by keeping things simple. I often just use grayscale, too: “Most important: design in greyscale. Color is hard and can lead to tinkering. My goal is to get in and out of the front-end bits quickly, so tinkering is the enemy. [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="http://therealadam.com/2013/04/08/web-design-for-busy-programmers/">Adam Keys has several tips for programmers</a>, to make our web sites look better by keeping things simple. I often just use grayscale, too:</p>
<blockquote><p>
  “Most important: design in greyscale. Color is hard and can lead to tinkering. My goal is to get in and out of the front-end bits quickly, so tinkering is the enemy. Greyscale is one dimensional, greatly simplifying matters. Give important information higher contrast and less important information or ‘chrome’ less contrast. Now you’re done thinking about color.”
</p></blockquote>
<p>These days I also start everything with <a href="http://twitter.github.io/bootstrap/">Bootstrap</a>, which adds great defaults for layout, buttons, and text. It makes everything looks better, right away. It’s not a replacement for a designer, but it does save hours (or days) of getting the basics up and running.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2013/04/design_in_grayscale.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Bootstrap CSS</title>
		<link>http://www.manton.org/2012/05/bootstrap_css.html</link>
		<comments>http://www.manton.org/2012/05/bootstrap_css.html#comments</comments>
		<pubDate>Mon, 07 May 2012 14:07:58 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[css]]></category>
		<category><![CDATA[dates]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[tweetmarker]]></category>
		<category><![CDATA[twitter]]></category>

		<guid isPermaLink="false">http://www.manton.org/2012/05/bootstrap_css.html</guid>
		<description><![CDATA[I&#8217;ve been using Twitter&#8217;s Bootstrap in an internal project at VitalSource for a few months, and over the weekend I finally switched to using the CSS framework in Tweet Marker too. The layout now works in more browsers and provides a much better foundation for design changes. It also allowed me to integrate this excellent [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve been using <a href="http://twitter.github.com/bootstrap/">Twitter&#8217;s Bootstrap</a> in an internal project at VitalSource for a few months, and over the weekend I finally switched to using the CSS framework in Tweet Marker too. The layout now works in more browsers and provides a much better foundation for design changes. It also allowed me to integrate <a href="http://www.eyecon.ro/bootstrap-datepicker/">this excellent date picker</a>.</p>
<p><a href="http://www.riverfold.com/software/tweetmarker/dates.html">Here&#8217;s a short screencast video</a> showing the date picker in a new browsing feature in Tweet Marker Plus. I&#8217;m very happy with how this turned out — both the look and functionality. On the server the date ranges are implemented with a Sphinx query, so they can be combined with search terms to help find old tweets.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2012/05/bootstrap_css.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Holiday bundles and no-brainer promotions</title>
		<link>http://www.manton.org/2010/12/holiday_bundles_and.html</link>
		<comments>http://www.manton.org/2010/12/holiday_bundles_and.html#comments</comments>
		<pubDate>Fri, 17 Dec 2010 21:31:49 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Business]]></category>
		<category><![CDATA[bundles]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[mac]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">http://www.manton.org/2010/12/holiday_bundles_and.html</guid>
		<description><![CDATA[Two new bundles were announced this week: &#8220;The Indie Mac Gift Pack&#8221;:https://indiemacgiftpack.com/ (6 great Mac apps for $60) and the &#8220;Fusion Ads Holiday Bundle&#8221;:https://fusionads.net/bundle/ (an assortment of web design-related apps, icons, and more for $79). I love apps in both of these bundles and recommend you check them out, buy what you need, or gift [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Two new bundles were announced this week: &#8220;The Indie Mac Gift Pack&#8221;:https://indiemacgiftpack.com/ (6 great Mac apps for $60) and the &#8220;Fusion Ads Holiday Bundle&#8221;:https://fusionads.net/bundle/ (an assortment of web design-related apps, icons, and more for $79). I love apps in both of these bundles and recommend you check them out, buy what you need, or gift them to a friend. There&#8217;s a fear among many developers that a bundle can cheapen the healthy Mac software market, but both these bundles avoid that with a higher price and the feel of being put together carefully.</p>
<p>As a comparison, here&#8217;s a &#8220;Macworld article on holiday bundles from 2009&#8221;:http://www.macworld.com/article/145005/2009/12/holiday_bundles.html. That collection seems kind of random despite several good apps in the list.</p>
<p>And sales for the Indie Mac Gift Pack are split evenly to the developers, so we know it&#8217;ll be a nice revenue boost for them during the holidays. From the FAQ:</p>
<blockquote><p>&#8220;Hey&#8230; you&#8217;re ripping these developers off, aren&#8217;t you?&#8221; &#8230; &#8220;No&#8230; we ARE these developers. Our six small companies decided to band together and do a promotion, to see if it works for us. We&#8217;re splitting all the proceeds evenly. There&#8217;s no middleman here.&#8221;</p></blockquote>
<p>I&#8217;ve never participated in a bundle, but after some of the &#8220;MacHeist controversy&#8221;:http://homepage.mac.com/simx/technonova/reports/from_the_mouths_of_developers.html I developed a set of rules that I run Riverfold promotions on. These are the easy things that I can always say &#8220;yes&#8221; to without much thought:</p>
<p><em>Coupons are great.</em> My coupons rarely expire and I don&#8217;t care if sites like &#8220;retailmenot.com&#8221;:http://www.retailmenot.com/ keep a list of them. Saving a few bucks might be the difference between someone buying my software and not.</p>
<p><em>Giving out software to bloggers is great.</em> Inspired by &#8220;Wil Shipley&#8217;s C4 talk&#8221;:http://www.viddler.com/explore/rentzsch/videos/4/, I&#8217;ve &#8220;blogged about this&#8221;:http://www.manton.org/2008/04/wii_transfer_serial.html. Apple employees get free licenses too.</p>
<p><em>Small promotions are great.</em> I freely give out copies to small sites that want to give away licenses of my software to encourage people to post comments. I think readers interpret these (correctly) as software developers doing something generous for a small site, instead of the gut reaction when you see software listed on MacZot or MacUpdate Promo (&#8220;are sales so bad they had to sell their software for half price?&#8221;).</p>
<p><em>Charity is great</em>. I loved being a part of &#8220;Indie+Relief&#8221;:http://www.indierelief.com/, the Pan-Mass Challenge auctions, and other bundles that go directly to a cause. Just like smaller promotions, these are good for users (deals on software), good for developers (helps with marketing), good for charity (donated money), and good for the software market (these aren&#8217;t developers who are making a sacrifice because their sales aren&#8217;t doing well &mdash; it&#8217;s charity).</p>
<p>Now that I&#8217;ve seen a bundle like the &#8220;Indie Mac Gift Pack&#8221;:https://indiemacgiftpack.com/, I think I can more clearly judge a unique bundle opportunity when it comes along. Does it minimize the middleman? Does it respect the individual apps as peers? Does it use the total bundle price to underscore the value of software rather than cheapen it? Then it&#8217;s probably a good deal for everyone.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2010/12/holiday_bundles_and.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>New blog design</title>
		<link>http://www.manton.org/2009/11/new_blog_design.html</link>
		<comments>http://www.manton.org/2009/11/new_blog_design.html#comments</comments>
		<pubDate>Wed, 25 Nov 2009 04:08:20 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Weblogs]]></category>
		<category><![CDATA[blog]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[riverfold]]></category>

		<guid isPermaLink="false">http://www.manton.org/2009/11/new_blog_design.html</guid>
		<description><![CDATA[I&#8217;ve been blogging here since 2002, and I started Riverfold in 2006, but it&#8217;s taken me a while to realize something pretty obvious: traffic flows back and forth between my personal blog and the company site, and I should stop fighting it. Today I&#8217;m embracing that in a small way by adapting the &#8220;riverfold.com&#8221;:http://www.riverfold.com/ design [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I&#8217;ve been blogging here since 2002, and I started Riverfold in 2006, but it&#8217;s taken me a while to realize something pretty obvious: traffic flows back and forth between my personal blog and the company site, and I should stop fighting it. Today I&#8217;m embracing that in a small way by adapting the &#8220;riverfold.com&#8221;:http://www.riverfold.com/ design to this blog, and linking more prominently to my indie products.</p>
<p>I&#8217;ll still post about things that have nothing to do with software. I don&#8217;t want to give that up, and some of my favorite posts wouldn&#8217;t exist if I stuck to programming or business topics. Some non-software favorites I found while surfing &#8220;the archives&#8221;:http://www.manton.org/archives.html include &#8220;Ollie Johnston died&#8221;:http://www.manton.org/2008/04/ollie_johnston.html, &#8220;Perfection&#8221;:http://www.manton.org/2005/08/perfection.html, &#8220;The Great Scott&#8221;:http://www.manton.org/2005/02/the_great_scott.html, &#8220;Bush veto&#8221;:http://www.manton.org/2007/11/bush_veto.html, and &#8220;50,136 words&#8221;:http://www.manton.org/2005/12/50136_words.html. But hopefully by unifying things a little it&#8217;ll be more consistent, and encourage visitors coming to my blog for the first time to also buy some Mac software.</p>
<p>Thanks for your support over the years. Even when the referrers dry up and the click-throughs aren&#8217;t worth graphing, I&#8217;ll still write here, and maybe every once in a while it&#8217;ll be something good.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2009/11/new_blog_design.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>It&#8217;s like iTunes for&#8230;</title>
		<link>http://www.manton.org/2009/07/its_like_itunes.html</link>
		<comments>http://www.manton.org/2009/07/its_like_itunes.html#comments</comments>
		<pubDate>Thu, 23 Jul 2009 19:26:55 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[clipstart]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[itunes]]></category>

		<guid isPermaLink="false">http://www.manton.org/2009/07/its_like_itunes.html</guid>
		<description><![CDATA[Sometimes it seems like every app is trying to be &#8220;the iTunes for &#60;insert subject here&#62;&#8221;. I&#8217;ve worked on &#8220;an app that fits into this category&#8221;:http://www.vitalsource.com/software/bookshelf/, and there are countless more. iTunes 1.0 represents one of the biggest shifts in Mac user interface design we&#8217;ve seen &#8212; single window, source list, and smart groups. While [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Sometimes it seems like every app is trying to be &#8220;the iTunes for &lt;insert subject here&gt;&#8221;. I&#8217;ve worked on &#8220;an app that fits into this category&#8221;:http://www.vitalsource.com/software/bookshelf/, and there are countless more. iTunes 1.0 represents one of the biggest shifts in Mac user interface design we&#8217;ve seen &mdash; single window, source list, and smart groups.</p>
<p>While the iTunes UI is great for music, I&#8217;m not convinced it&#8217;s automatically great for all workflows.</p>
<p>&#8220;Clipstart&#8221;:http://www.riverfold.com/software/clipstart/ goes out of its way to do something different, by twisting the traditional source list a little to promote tags as the most important part of the UI. At first I feared that some customers would find it worse, that the UI would fail and I would be forced to become more iTunes-ish for the next version. But I think only by trying something different can you hope to be better. I&#8217;ve been using Clipstart to manage my movies all year and the tag-focused UI really works, especially when you start building up your library and can search and find related tags across all your videos.</p>
<p>I released Clipstart 1.1.1 a few days ago with a bunch of bug fixes, and an &#8220;iPhone 3GS giveaway&#8221;:http://www.riverfold.com/software/clipstart/press/3gs.html too.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2009/07/its_like_itunes.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Better software, less support</title>
		<link>http://www.manton.org/2009/02/better_software_less.html</link>
		<comments>http://www.manton.org/2009/02/better_software_less.html#comments</comments>
		<pubDate>Sat, 07 Feb 2009 13:26:41 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[limits]]></category>
		<category><![CDATA[support]]></category>

		<guid isPermaLink="false">http://www.manton.org/2009/02/better_software_less.html</guid>
		<description><![CDATA[A few months ago &#8220;Ars carried a story&#8221;:http://arstechnica.com/journals/apple.ars/2008/10/09/slowing-economy-impacts-apple-call-center-in-colorado about Apple canceling a call center in Colorado. This part stuck out to me: &#8220;Somewhat surprisingly, the iPhone 2.1 update was also named as one of the reasons for the cancellation. The software update has apparently been so successful at resolving iPhone 3G problems that its release [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>A few months ago &#8220;Ars carried a story&#8221;:http://arstechnica.com/journals/apple.ars/2008/10/09/slowing-economy-impacts-apple-call-center-in-colorado about Apple canceling a call center in Colorado. This part stuck out to me:</p>
<blockquote><p>&#8220;Somewhat surprisingly, the iPhone 2.1 update was also named as one of the reasons for the cancellation. The software update has apparently been so successful at resolving iPhone 3G problems that its release has caused a noticeable drop in support calls.&#8221;</p></blockquote>
<p>In this case it was just bug fixes, but it reminded me of &#8220;Getting Real&#8221;:https://gettingreal.37signals.com/. Make software easy to use and simple and then there are fewer things that can break and users are less confused. I have been obsessed with following this advice lately. Some of the limitations I&#8217;ve put in a couple recent projects:</p>
<ul>
<li>No preferences (for Mac, no prefs window; for web, no options or settings screen).</p>
</li>
<li>
<p>Single toolbar (no status bar or need to look in multiple places, e.g. both the top and bottom of the window).</p>
</li>
<li>
<p>Minimal toolbar buttons (only the absolute basics are exposed outside of menus).</p>
</li>
<li>
<p>Opinionated defaults (no customization, similar to others above).</p>
</li>
</ul>
<p>On a few occasions this has hurt my ability to add features, but on others it forces me to see a user interface problem from a new angle, something I wouldn&#8217;t have done if I hadn&#8217;t had these limits to work in.</p>
<p>Limiting features in an app does not come naturally to me, but the more I embrace it, the more value I see in it. I &#8220;tweeted a bonus side effect&#8221;:http://twitter.com/manton/status/1177252437 to this approach last week: &#8220;Maybe another reason why simple software succeeds: customers see in it all the possible features to come, implemented just right for them.&#8221;</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2009/02/better_software_less.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Small icons</title>
		<link>http://www.manton.org/2008/12/small_icons.html</link>
		<comments>http://www.manton.org/2008/12/small_icons.html#comments</comments>
		<pubDate>Thu, 11 Dec 2008 14:02:14 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Art]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[icons]]></category>

		<guid isPermaLink="false">http://www.manton.org/2008/12/small_icons.html</guid>
		<description><![CDATA[I mentioned on &#8220;Core Intuition&#8221;:http://www.coreint.org/ episode 11 that I&#8217;ve been having fun making small icons for my new app. Here are a few partial screenshots: Some of these are just pixel-by-pixel drawings, with slight gradients in places. For other parts of the user interface I used vectors in Photoshop, which gives a nice anti-aliased look [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>I mentioned on &#8220;Core Intuition&#8221;:http://www.coreint.org/ episode 11 that I&#8217;ve been having fun making small icons for my new app. Here are a few partial screenshots:</p>
<div style="text-align:center;"><img src="http://www.manton.org/images/2008/clipstart_icons.png" alt="clipstart_icons.png" border="0" width="450" height="95" /></div>
<p>Some of these are just pixel-by-pixel drawings, with slight gradients in places. For other parts of the user interface I used vectors in Photoshop, which gives a nice anti-aliased look that is important for some types of shapes, but for really small icons and widgets it&#8217;s pretty satisfying to just poke at things &#8220;fat bits&#8221;:http://www.google.com/search?q=fat+bits+macpaint style.</p>
<p>&#8220;Gus Mueller&#8221;:http://gusmueller.com/blog/ pointed out that I should be using PDFs or drawing them in code to be ready for resolution independence. He&#8217;s right of course. Maybe Apple will announce a device at Macworld that will make that task seem more practical.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2008/12/small_icons.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>

<!-- Dynamic page generated in 1.720 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-01-06 13:19:54 -->
