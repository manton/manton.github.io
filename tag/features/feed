<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>features &#8211; Manton Reece</title>
	<atom:link href="http://www.manton.org/tag/features/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Tue, 13 Dec 2016 22:36:17 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>iOS 7 and UI debt</title>
		<link>http://www.manton.org/2014/04/ios_7_and.html</link>
		<pubDate>Tue, 29 Apr 2014 22:09:03 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[features]]></category>
		<category><![CDATA[ios7]]></category>
		<category><![CDATA[thirdparty]]></category>
		<category><![CDATA[uikit]]></category>

		<guid isPermaLink="false">http://www.manton.org/2014/04/ios_7_and.html</guid>
		<description><![CDATA[Jared Sinclair writes about iOS 7 as a squandered year for third-party developers: “Fast-forwarding a year, the effect that iOS 7 has had on third party development is disheartening — which sounds like a fatuous thing to say, since there have been so many well-liked redesigns over the past year. But that’s the rub: the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="http://blog.jaredsinclair.com/post/84237156390/ios-7-squandered-a-year-of-third-party-development-on">Jared Sinclair writes about iOS 7 as a squandered year</a> for third-party developers:</p>
<blockquote><p>
  “Fast-forwarding a year, the effect that iOS 7 has had on third party development is disheartening — which sounds like a fatuous thing to say, since there have been so many well-liked redesigns over the past year. But that’s the rub: the vast majority of third-party developers’ time has been spent redesigning and reimplementing apps to dress the part for iOS 7.”
</p></blockquote>
<p>I agree with Jared that it was a sort of lost year for app features, but <a href="http://inessential.com/2014/04/29/the_cost_of_ios_7">Brent also has a point</a>:</p>
<blockquote><p>
  “Jared argues that iOS 7 wasn’t urgent, that evolution rather than revolution would have been fine, since customer satisfaction was extremely high with iOS 6. In retrospect I agree, but were I at Apple I would have argued that the situation is like tech debt — UI debt — and it’s best to deal with it quickly, completely, and early.”
</p></blockquote>
<p>They had to deal with it all at once because UIKit’s look and feel didn’t really evolve the same way Mac OS X usually does, a little each year. Even Aqua, the most dramatic change ever to the Mac’s UI, was fairly straightforward for developers to adopt; if you stuck with consistent Mac controls, you got a lot for free. There was very little of that kind of consistency on iOS because developers frequently built their own custom UIs which had to be thrown out when iOS 7 happened.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Jurewitz on features, pricing</title>
		<link>http://www.manton.org/2013/04/jurewitz_on_features.html</link>
		<pubDate>Tue, 02 Apr 2013 16:34:23 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Business]]></category>
		<category><![CDATA[appstore]]></category>
		<category><![CDATA[features]]></category>
		<category><![CDATA[jury]]></category>
		<category><![CDATA[mvp]]></category>
		<category><![CDATA[pricing]]></category>

		<guid isPermaLink="false">http://www.manton.org/2013/04/jurewitz_on_features.html</guid>
		<description><![CDATA[Michael Jurewitz wrote a great post last week on minimum viable products: “As you look at your products and how you make them remember these key points. You don’t need all the features under the sun. You don’t need technical excellence (assuming you also avoid technical debt). You need to solve a worthwhile problem in [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="http://jury.me/blog/2013/3/30/mvp">Michael Jurewitz wrote a great post</a> last week on minimum viable products:</p>
<blockquote><p>
  “As you look at your products and how you make them remember these key points. You don’t need all the features under the sun. You don’t need technical excellence (assuming you also avoid technical debt). You need to solve a worthwhile problem in a delightful, thoughtful, and simple way.”
</p></blockquote>
<p>What he’s saying is it’s okay to be limited, but make that limited part totally polished. Cutting back features doesn’t mean you also cut back on quality. It reminds me of <a href="http://gettingreal.37signals.com/ch05_Half_Not_Half_Assed.php">the quote from 37signals</a>: “build half a product, not a half-ass product”.</p>
<p>This is good advice that I need to take to heart. I don’t have much problem shipping. But my apps often have some rough edges at 1.0.</p>
<p>Also don’t miss Jurewitz’s great <a href="http://mjtsai.com/blog/2013/04/01/understanding-app-store-pricing/">5-part series on App Store pricing</a>. I’m linking to Michael Tsai’s summary here, since it provides nice quotes and links to each part in the series. I saw the talk that these blog posts were based on twice, at Çingleton and NSConference, and this has to be the best translation of a conference session into blog form I’ve ever seen. Not to be missed.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Removing features</title>
		<link>http://www.manton.org/2010/02/removing_features.html</link>
		<pubDate>Wed, 03 Feb 2010 20:03:34 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[features]]></category>
		<category><![CDATA[lukasmathis]]></category>
		<category><![CDATA[wiitransfer]]></category>

		<guid isPermaLink="false">http://www.manton.org/2010/02/removing_features.html</guid>
		<description><![CDATA[&#8220;Lukas Mathis writes&#8221;:http://ignorethecode.net/blog/2010/02/02/removing-features/ about removing features: &#8220;You don&#8217;t _have_ to try to please everybody and eventually create an application that is liked by nobody. In fact, since your users are in all likelihood in a situation where they can switch applications easily, and since they probably are not locked in by the need to open [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>&#8220;Lukas Mathis writes&#8221;:http://ignorethecode.net/blog/2010/02/02/removing-features/ about removing features:</p>
<blockquote><p>&#8220;You don&#8217;t _have_ to try to please everybody and eventually create an application that is liked by nobody. In fact, since your users are in all likelihood in a situation where they can switch applications easily, and since they probably are not locked in by the need to open a specific file format in its native application, it might be a really bad idea for you to go down the &#8216;simply add up all the requested features&#8217; route of application design.&#8221;</p></blockquote>
<p>He also links to &#8220;my Wii Transfer survey&#8221;:http://www.manton.org/2009/07/wii_transfer_survey.html, so I thought I&#8217;d post a quick follow-up. I eventually did remove a feature, and the survey to customers served as a nice sanity check that the feature wasn&#8217;t heavily used. The interesting part, to me, is that the feature I removed was the <em>entire 1.0 product for Wii Transfer</em>. Literally everything that 1.0 did is now gone.</p>
<p>It&#8217;s been two weeks so far without any complaints. I like to think that it removes a distraction from the app &mdash; one less place in the app that could lead the customer down the wrong path. And hopefully it&#8217;ll eliminate a tiny part of my support load, as no one can ask me questions or have problems with that feature again!</p>
<p>On an internal company mailing list I once wrote:</p>
<blockquote><p>&#8220;Products that don&#8217;t exist yet have a way of attracting new features because everyone sees the potential in something that has no form&#8221;.</p></blockquote>
<p>I was talking about resisting the urge for everyone on the team to pile on their favorite features before 1.0, but I think this applies to apps with a minimal design as well. A simple app shows promise. A cluttered app with too much going on looks &#8220;done&#8221;, and sends a message that it is mature and maybe going in a different direction than what the user wants. In that way, the irony is that removing features (the <em>wrong</em> features) may actually make an application more appealing to new users.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Dynamic page generated in 0.242 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-12-13 17:02:04 -->
