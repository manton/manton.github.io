<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>performance &#8211; Manton Reece</title>
	<atom:link href="http://www.manton.org/tag/performance/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Tue, 13 Dec 2016 22:36:17 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Slow transitions in watchOS</title>
		<link>http://www.manton.org/2016/03/slow-transitions-in-watchos.html</link>
		<pubDate>Fri, 04 Mar 2016 15:30:47 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[animation]]></category>
		<category><![CDATA[applewatch]]></category>
		<category><![CDATA[notifications]]></category>
		<category><![CDATA[performance]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=3622</guid>
		<description><![CDATA[Much has been made of the Apple Watch not being fast enough. It’s too slow for full iPhone-like apps, of course, but that doesn’t bother me because I think the watch is pretty great at its core features. But I’ve noticed that it’s slow even for some of the simple stuff, and I don’t think [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Much has been made <a href="http://www.manton.org/2016/02/apple-watch-is-slow-for-now.html">of the Apple Watch not being fast enough</a>. It’s too slow for full iPhone-like apps, of course, but that doesn’t bother me because I think the watch is <a href="http://www.manton.org/2016/01/apple-watch-still-pretty-great.html">pretty great at its core features</a>. But I’ve noticed that it’s slow even for some of the simple stuff, and I don’t think this can be blamed on hardware alone.</p>
<p>Take notifications, for example. There are several distinct steps to notifications after you receive one:</p>
<ul>
<li>Tapping a notification.</li>
<li>Waiting for it to load, which is an animated transition.</li>
<li>Optionally scrolling to the bottom to read it all.</li>
<li>Actually tapping Dismiss to get rid of it.</li>
</ul>
<p>There’s a tiny lag between all of these. I frequently can’t scroll right away, as if it’s not responsive until the animation completes. The Dismiss button also doesn’t seem to be enabled immediately, requiring a 2nd tap before it “clicks”.</p>
<p>I bet these are solvable with a software update. Shorter animated transitions or pre-loading notification text might go a long way to improve the experience.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Apple Watch is slow&#8230; for now</title>
		<link>http://www.manton.org/2016/02/apple-watch-is-slow-for-now.html</link>
		<pubDate>Sun, 28 Feb 2016 21:20:01 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Technology]]></category>
		<category><![CDATA[applewatch]]></category>
		<category><![CDATA[iphone]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[snowboarding]]></category>

		<guid isPermaLink="false">http://www.manton.org/?p=3587</guid>
		<description><![CDATA[Dan Moren wrote an essay for Six Colors last week about why slowness is such a problem for the Apple Watch: “The stale data and the lack of speed means that either you have to stare at your Watch for several seconds and hope the data updates; or tap on the complication to load the [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="https://sixcolors.com/2016/02/why-slowness-is-killing-the-apple-watch/">Dan Moren wrote an essay for Six Colors last week</a> about why slowness is such a problem for the Apple Watch:</p>
<blockquote><p>
  “The stale data and the lack of speed means that either you have to stare at your Watch for several seconds and hope the data updates; or tap on the complication to load the Watch app, which as we all know takes a good long while as well; or simply give up and pull out your phone. [&#8230;] It’s not just that the Apple Watch is slow; it’s that it’s slow <em>while promising to be faster</em>.”
</p></blockquote>
<p>Both Dan and Jason Snell followed up on this topic in the latest Six Colors subscriber podcast. The problem, they recognized, is that the first Apple Watch tried to do too much. Apple should instead focus on a few core features and make them fast.</p>
<p>Which features? I still use the Apple Watch every single day, and I use it for just three things: telling the time, tracking fitness (including reminding me to stand up), and glancing at notifications.</p>
<p>Some people have stopped wearing their watch every day. Again, <a href="http://www.manton.org/2016/01/apple-watch-still-pretty-great.html">that&#8217;s fine</a>. Curtis Herbert was falling into that category, until he went snowboarding with friends and realized how useful the Apple Watch is when you can’t get to your phone or tap buttons. <a href="http://blog.curtisherbert.com/apple-watch-makes-the-perfect-snowboarding-companion/">In an article about the snowboarding trip</a>, Curtis says the Apple Watch’s problems are solvable in future versions:</p>
<blockquote><p>
  “Siri on the Watch will get faster. The battery situation will improve. The Watch as a whole will get faster. We&#8217;re spoiled by iPhone speeds and sometimes forget just how long it took us to get there, and the crap we dealt with until then.”
</p></blockquote>
<p>I’m not worried about the future of the watch either. Our early expectations were much too high — in contrast with the first iPhone, which exceeded all hopes because it was seemingly from the future already — and it will take a couple more years to catch up to where we’d all like the watch to be. In the meantime, the watch is useful today, even slow-ish.</p>
]]></content:encoded>
			</item>
		<item>
		<title>Fancy-pants productivity</title>
		<link>http://www.manton.org/2008/03/fancypants_productivity.html</link>
		<pubDate>Fri, 14 Mar 2008 17:38:09 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[User Experience]]></category>
		<category><![CDATA[fancy]]></category>
		<category><![CDATA[norbauer]]></category>
		<category><![CDATA[pants]]></category>
		<category><![CDATA[performance]]></category>
		<category><![CDATA[productivity]]></category>
		<category><![CDATA[rails]]></category>

		<guid isPermaLink="false">http://www.manton.org/2008/03/fancypants_productivity.html</guid>
		<description><![CDATA[There are a few things in this post by &#8220;Ryan Norbauer&#8221;:http://notrocketsurgery.com/articles/2008/02/26/mention-in-wired-piece-on-37signals (via 37signals) that bother me. One is this idea that &#8220;code is meant to be read by humans first and computers only secondarily&#8221;. I understand what he is getting at, but even though I respect new advances in productivity, we have to be very [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>There are a few things in this post by &#8220;Ryan Norbauer&#8221;:http://notrocketsurgery.com/articles/2008/02/26/mention-in-wired-piece-on-37signals (via 37signals) that bother me. One is this idea that &#8220;code is meant to be read by humans first and computers only secondarily&#8221;. I understand what he is getting at, but even though I respect new advances in productivity, we have to be very careful to keep our core priorities. There&#8217;s a word for when the balance shifts away from the user and more to us as programmers: selfishness.</p>
<p>Imagine two programs: one is ugly and hard to read, but it compiles and is bug-free; the other is beautiful and readable, and it also compiles and is bug-free. To the user they are identical. They both succeed.</p>
<p>Now take those two and give them both identical beauty and readability, but accidentally break one so that it either does not compile or runs so horribly buggy and slow that it is useless to everyone. Writing code for other programmers to read isn&#8217;t enough. You have to start with code that works before you get all fancy-pants.</p>
<p>This growing trend to raise beautiful code and programmer productivity above the performance or functionality of the final product is dangerous. The final product is what counts. Not how you build it, but what you&#8217;ve built: how it scales, how it performs, how it solves a particular problem.</p>
<p>And sure, there are many times when I write slow, lazy code that doesn&#8217;t work well. But that&#8217;s a compromise you make when you have to meet a deadline, or because you aren&#8217;t sure how to optimize yet, not because you start out by deprecating user experience. If you believe Ryan, it sounds like there is a whole &#8220;movement&#8221; of programmers who toss any potential performance achievements out the window before they even get started.</p>
<p>You can say that great products are complex, and so you need to focus attention on how the software is built and maintained. That is true. When I ported a large application from Carbon to Cocoa a few years ago I made the decision to do so because of future productivity.</p>
<p>You can say that happy programmers create high-quality products. That is also true. When I am feeling most productive I am usually enjoying myself because the work environment I&#8217;m in is encouraging.</p>
<p>But don&#8217;t put the <em>practice</em> of software development above the actual result, because to do so means you care more about writing code than solving problems.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Dynamic page generated in 0.252 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-12-13 17:01:47 -->
