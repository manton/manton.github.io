<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>reflections &#8211; Manton Reece</title>
	<atom:link href="http://www.manton.org/tag/reflections/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Tue, 13 Dec 2016 22:36:17 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.6.1</generator>
	<item>
		<title>Reflecting on a beta release and server testing</title>
		<link>http://www.manton.org/2007/02/reflecting_on_a.html</link>
		<pubDate>Sat, 10 Feb 2007 05:23:23 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Programming]]></category>
		<category><![CDATA[cocoa]]></category>
		<category><![CDATA[covers]]></category>
		<category><![CDATA[itunes]]></category>
		<category><![CDATA[reflections]]></category>
		<category><![CDATA[transfer]]></category>
		<category><![CDATA[wii]]></category>

		<guid isPermaLink="false">http://www.manton.org/2007/02/reflecting_on_a.html</guid>
		<description><![CDATA[Wii Transfer 2.2 is taking longer to get ready than I had planned, so I&#8217;ve decided to post a public beta while the last pieces are polished up. You can &#8220;grab it from the news section&#8221;:http://www.riverfold.com/software/wiitransfer/ of the Riverfold site (lower right). It is very close to being done, but giant chunks of code have [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Wii Transfer 2.2 is taking longer to get ready than I had planned, so I&#8217;ve decided to post a public beta while the last pieces are polished up. You can &#8220;grab it from the news section&#8221;:http://www.riverfold.com/software/wiitransfer/ of the Riverfold site (lower right). It is very close to being done, but giant chunks of code have been completely rewritten. I hope the extra testing will help make 2.2 an extremely solid release, and get some of the new features in the hands of users as soon as possible.</p>
<p>So what&#8217;s new in 2.2? iTunes playlists and several new preferences to control picture sharing top the list, but there are at least a dozen changes underneath the hood.</p>
<p>The web server built into Wii Transfer has seen some work in particular. Music browsing now uses the iTunes Music Library.xml file for everything rather than look at directory contents, and you can change the port number on the fly without restarting Wii Transfer if there is a conflict with any other applications.</p>
<p>I&#8217;ve also added reflections to the album cover art! You can see a &#8220;screenshot here&#8221;:http://www.manton.org/images/2007/wii_transfer_cover.jpg and another one of &#8220;the collage for playlists here&#8221;:http://www.manton.org/images/2007/wii_transfer_collage.jpg (these are from Safari, but it looks mostly the same on the Wii). This was really fun to do, but unfortunately it somehow introduced a subtle double-release bug that I spent hours fixing. It would only happen if the album art could not be found in iTunes and while multiple connections were hitting the server (i.e. it was ultimately a threading issue), and maybe only every dozen requests.</p>
<p>I tracked it down by using ab (Apache Bench), pointed at Wii Transfer. I had a shell script with a bunch of lines that looked like:</p>
<p><code>ab -n 200 -c 4 "http://localhost:9000/m/Beatles.cover</code></p>
<p>This URL asks Wii Transfer to grab any album art from iTunes for The Beatles, apply the reflection and return the JPEG data. It is flexible because you can send it any search strings. Other examples might be: <code>Evanescence%20Door.cover</code> or <code>Zoo%20Station.cover</code>. I was a little surprised that my little server was actually pumping out pages fairly quickly considering all the AppleScript and Quartz stuff going on. 10-20 requests per second isn&#8217;t much for a real web application, but for an app that is by definition single-user, it&#8217;s perfect.</p>
<p>The reflection code was made even easier by &#8220;BHReflectedImage&#8221;:http://bithaus.com/2006/11/05/nsimage-reflection/, which I modified to work with black backgrounds and then wrapped up in other helper methods to composite the cover and reflection together. When I first ran across this code I didn&#8217;t even notice it was written by Jeff Ganyard, who I&#8217;ve known for years and still run into at WWDC. Thanks Jeff! This goes in the about box credits with a bunch of other mentions. There is a really active Mac developer community that contributes source pretty freely, and I hope to add a few things to that collection one of these day as well.</p>
]]></content:encoded>
			</item>
	</channel>
</rss>

<!-- Dynamic page generated in 0.249 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2016-12-13 17:22:31 -->
