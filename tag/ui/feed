<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Manton Reece &#187; ui</title>
	<atom:link href="http://www.manton.org/tag/ui/feed" rel="self" type="application/rss+xml" />
	<link>http://www.manton.org</link>
	<description></description>
	<lastBuildDate>Fri, 18 Dec 2015 17:56:59 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>http://wordpress.org/?v=4.3.1</generator>
	<item>
		<title>Multiplane</title>
		<link>http://www.manton.org/2013/06/multiplane.html</link>
		<comments>http://www.manton.org/2013/06/multiplane.html#comments</comments>
		<pubDate>Mon, 17 Jun 2013 21:22:59 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[Animation]]></category>
		<category><![CDATA[animation]]></category>
		<category><![CDATA[apple]]></category>
		<category><![CDATA[design]]></category>
		<category><![CDATA[disney]]></category>
		<category><![CDATA[ios7]]></category>
		<category><![CDATA[iwerks]]></category>
		<category><![CDATA[ui]]></category>

		<guid isPermaLink="false">http://www.manton.org/2013/06/multiplane.html</guid>
		<description><![CDATA[“We spend a lot of time on a few great things.” — Designed by Apple in California In 1940, Ub Iwerks, the animator behind Walt Disney’s first Mickey Mouse shorts, came back to the Disney studios after a 10-year absence. Ub had famously produced hundreds of drawings alone each day for one of those first [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><em>“We spend a lot of time on a few great things.” — <a href="http://www.apple.com/designed-by-apple/">Designed by Apple in California</a></em></p>
<p>In 1940, Ub Iwerks, the animator behind Walt Disney’s first Mickey Mouse shorts, came back to the Disney studios after a 10-year absence. Ub had famously produced hundreds of drawings alone each day for one of those first Mickey Mouse shorts, but Ub’s return to Disney would also be remembered for his contribution to the technical side of film production, with advances in cameras and special effects. In an industry with extreme specialization — you either did backgrounds, or animation, or ink-and-paint — Ub’s talents bridged both the artistic and technical.</p>
<p>One of Ub’s inventions while away from Disney was called the multiplane camera. Perfected by others leading up to Snow White, in a massive camera stand over 10 feet tall, the multiplane’s innovation was to allow a background to be split into levels. Foreground trees might be painted on the glass of the first level, then the characters sat underneath that, and then farther back layers for a building, with others behind that for hills and sky.</p>
<p>To provide a sense of depth, camera operators could vary the distance between each plane. And movement for each level could be synchronized at different speeds, giving it a beautiful parallax effect. Distant background levels moved more slowly and were naturally blurred and out of focus.</p>
<p>80 years after Ub’s invention, the multiplane is alive in iOS 7. Previous versions of iOS were built on a single plane with raised and textured areas on that surface, like a topographical map except with buttons instead of mountains. iOS 7 is instead designed with multiple flat layers. Each level is strikingly flat, but by layering two or three, spaced apart, Apple has achieved an overall sense of depth.</p>
<p>It’s a return to basics. Simple things can remain simple, readable. When clarity is needed, everything goes flat. But it’s a framework that allows for subtle motion and depth without changing what works about the new, content-first flat design. iOS 7’s control center blurs the layer below. The home screen background sits deeper too, as if only the app icons are touching the screen. Photos scroll under the navigation bar.</p>
<p>Each plane is painted flat as if on glass. There can be no text drop shadows, no textures, without ruining the effect. And the result of this strict metaphor is equally valuable: there are no drop shadows to distract or obscure an app’s real content.</p>
<p>Disney’s multiplane camera, first in a dedicated rig and then recreated in software, lasted for decades, until the era of 3D computer animation. iOS 7’s new look won’t last that long, but the core concepts should carry Apple for years. I really like where they’re headed.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2013/06/multiplane.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Clipstart duplicates</title>
		<link>http://www.manton.org/2009/12/clipstart_duplicates.html</link>
		<comments>http://www.manton.org/2009/12/clipstart_duplicates.html#comments</comments>
		<pubDate>Tue, 22 Dec 2009 20:17:45 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[clipstart]]></category>
		<category><![CDATA[ui]]></category>

		<guid isPermaLink="false">http://www.manton.org/2009/12/clipstart_duplicates.html</guid>
		<description><![CDATA[Clipstart 1.0 tried to be smart about not importing videos that were already in your library, but it stopped short of actually giving you much control over whether to import duplicates or ignore them. I also felt like the window showing duplicates could be improved to provide more information about each file. At a glance [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Clipstart 1.0 tried to be smart about not importing videos that were already in your library, but it stopped short of actually giving you much control over whether to import duplicates or ignore them. I also felt like the window showing duplicates could be improved to provide more information about each file. At a glance you should be able to tell if Clipstart is doing the right thing.</p>
<p>So I put a lot of effort into this for the soon-to-be-released Clipstart 1.2.4, and the result is this window:</p>
<p><center><a href="http://www.manton.org/images/2009/duplicates_dialog.png"><img src="http://www.manton.org/images/2009/duplicates_small.png" width="400" height="532" alt="Duplicates dialog" border="0" /></a></center></p>
<p>It generates a few frames of the timeline for each video (both old and new file side by side), which turns out to be an excellent way to confirm that they are indeed the same file, and also shows the original filename even after Clipstart (or the user) has renamed it. Now I can scan through the window in about 2 seconds and I&#8217;m done. Contrast with iPhoto which prompts after each video is imported, instead of at the end of the batch, and if you blindly trust it by checking &#8220;Apply to all duplicates&#8221; then you have no feedback on whether you made the right choice.</p>
<p>The new duplicates window works with both volume-based cameras like the Flip and SD cards, as well as USB devices such as the iPhone 3GS and iPod Nano. I hope to ship version 1.2.4 soon, and there&#8217;s a &#8220;beta in the forums&#8221;:http://www.riverfold.com/forums/topic.php?id=49.</p>
<p><em>Update:</em> As pointed out by a customer, Ignore and Keep are actually pretty confusing verbs here. I&#8217;ve changed it to &#8220;Skip Duplicates&#8221; and &#8220;Import Duplicates&#8221; for the final release.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2009/12/clipstart_duplicates.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>MobileMe UI</title>
		<link>http://www.manton.org/2009/07/mobileme_ui.html</link>
		<comments>http://www.manton.org/2009/07/mobileme_ui.html#comments</comments>
		<pubDate>Fri, 10 Jul 2009 19:27:10 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[mobileme]]></category>
		<category><![CDATA[ui]]></category>
		<category><![CDATA[upload]]></category>

		<guid isPermaLink="false">http://www.manton.org/2009/07/mobileme_ui.html</guid>
		<description><![CDATA[I&#8217;m extremely impressed by this UI from MobileMe. All web-based, of course. Excellent progress feedback, great attention to detail&#8230; But then they nearly ruin it with &#8220;item(s)&#8221;.]]></description>
				<content:encoded><![CDATA[<p>I&#8217;m extremely impressed by this UI from MobileMe. All web-based, of course.</p>
<p><img src="http://www.manton.org/images/2009/mobileme_upload.png" width="560" height="419" alt="MobileMe upload" /></p>
<p>Excellent progress feedback, great attention to detail&#8230; But then they nearly ruin it with &#8220;item(s)&#8221;.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2009/07/mobileme_ui.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Essays about the web</title>
		<link>http://www.manton.org/2007/04/essays_about_the.html</link>
		<comments>http://www.manton.org/2007/04/essays_about_the.html#comments</comments>
		<pubDate>Mon, 09 Apr 2007 06:20:38 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[backpack]]></category>
		<category><![CDATA[flickr]]></category>
		<category><![CDATA[ical]]></category>
		<category><![CDATA[microsoft]]></category>
		<category><![CDATA[ui]]></category>
		<category><![CDATA[web]]></category>

		<guid isPermaLink="false">http://www.manton.org/2007/04/essays_about_the.html</guid>
		<description><![CDATA[Paul Graham thinks &#8220;Microsoft and desktop apps are dead&#8221;:http://www.paulgraham.com/microsoft.html: &#8220;Gmail also showed how much you could do with web-based software, if you took advantage of what later came to be called &#8216;Ajax.&#8217; And that was the second cause of Microsoft&#8217;s death: everyone can see the desktop is over. It now seems inevitable that applications will [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Paul Graham thinks &#8220;Microsoft and desktop apps are dead&#8221;:http://www.paulgraham.com/microsoft.html:</p>
<blockquote><p>&#8220;Gmail also showed how much you could do with web-based software, if you took advantage of what later came to be called &#8216;Ajax.&#8217; And that was the second cause of Microsoft&#8217;s death: everyone can see the desktop is over. It now seems inevitable that applications will live on the web &#8212; not just email, but everything, right up to Photoshop. Even Microsoft sees that now.&#8221;</p></blockquote>
<p>He&#8217;s definitely off the mark with that statement. Luckily &#8220;Martin Pilkington has a counter-rant&#8221;:http://pilky.mcubedsw.com/index.php?/site/the_desktop_is_here_to_stay/:</p>
<blockquote><p>&#8220;There seems to be a slightly delusional section of web developers who seem to believe that in a few years time all of our applications and data will be online, while our computers run little more than a browser. Of course this is complete bull.&#8221;</p></blockquote>
<p>As someone who builds both desktop software and web apps, I&#8217;m very much interested in what happens in the middle. Next generation Mac software in particular can mix local HTML interfaces, web services, and syncing with a traditional rich UI to build something that is the best of both offline and online worlds.</p>
<p>I had an interesting conversation with &#8220;Willie Abrams&#8221;:http://willie.tumblr.com/ the other day about why the Flickr UI is better than iPhoto, even if you take away all the social parts of Flickr. The reason is that Flickr introduces extra layouts specific to certain types of activities, such as the excellent calendar view for archives. Another example of a web app UI innovation is the Backpack reminder UI that &#8220;John Gruber recently wrote about&#8221;:http://daringfireball.net/2007/03/deal_with_it.</p>
<p>Web apps are usually able to iterate on features and interfaces much quicker than desktop software, but that doesn&#8217;t make web apps inherently better. Put another way, iCal sucks because it hasn&#8217;t been seriously updated in 5 years.</p>
<p>I have other thoughts on this topic, but already I&#8217;ve extended this blog post 3 paragraphs more than intended.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2007/04/essays_about_the.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>You had me at scrolling</title>
		<link>http://www.manton.org/2007/01/you_had_me.html</link>
		<comments>http://www.manton.org/2007/01/you_had_me.html#comments</comments>
		<pubDate>Wed, 10 Jan 2007 04:59:45 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[cocoa]]></category>
		<category><![CDATA[coreanimation]]></category>
		<category><![CDATA[iphone]]></category>
		<category><![CDATA[ui]]></category>

		<guid isPermaLink="false">http://www.manton.org/2007/01/you_had_me.html</guid>
		<description><![CDATA[&#8220;Last week I said&#8221;:http://www.manton.org/2007/01/macworld_2007_predictions.html I wasn&#8217;t interested in an iPod phone, unless it was something no one had even thought to expect. Well, it is. I am blown away by the iPhone. The thing runs Mac OS X. The iPhone is really inspirational in terms of UI design polish. You can tell they put some [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>&#8220;Last week I said&#8221;:http://www.manton.org/2007/01/macworld_2007_predictions.html I wasn&#8217;t interested in an iPod phone, unless it was something no one had even thought to expect. Well, it is. I am blown away by the iPhone. <i>The thing runs <strike>Mac</strike> OS X.</i></p>
<p>The iPhone is really inspirational in terms of UI design polish. You can tell they put some years into it. I was playing with Tiger&#8217;s NSAnimation the other night (sort of a poor man&#8217;s &#8220;Core Animation&#8221;:http://www.apple.com/macosx/leopard/coreanimation.html), and it reinforced for me the fact that UI effects are no longer optional pieces of software design. They can both visually supplement the user interaction and just make the application experience more enjoyable. &#8220;Disco&#8221;:http://www.discoapp.com/, for all the criticism as a glorified Disk Recording framework wrapper, is fun to use. Same goes for the just-released &#8220;Snapshot 2.0&#8221;:http://www.stuntsoftware.com/Snapshot/, which has a really thoughtful single-window UI.</p>
<p>This is going to be another great year to be a Mac developer. And we haven&#8217;t even seen the rest of Leopard yet. Only bump in the road will be if iPhone is a closed platform. The &#8220;comments over at Theocacao&#8221;:http://theocacao.com/document.page/404 provide some interesting commentary on that question.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2007/01/you_had_me.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Mediocrity is the new application platform</title>
		<link>http://www.manton.org/2006/03/mediocrity_is_the.html</link>
		<comments>http://www.manton.org/2006/03/mediocrity_is_the.html#comments</comments>
		<pubDate>Fri, 10 Mar 2006 03:41:13 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[ajax]]></category>
		<category><![CDATA[browsers]]></category>
		<category><![CDATA[flash]]></category>
		<category><![CDATA[google]]></category>
		<category><![CDATA[rails]]></category>
		<category><![CDATA[ui]]></category>

		<guid isPermaLink="false">http://www.manton.org/2006/03/mediocrity_is_the.html</guid>
		<description><![CDATA[Today marks the 4-year anniversary of this weblog. What better way to celebrate than with a discussion of web applications. Willie Abrams said in a recent Campfire chat: &#8220;Web applications automatically have sync.&#8221; He hits on the fundamental principle of web applications popularity, and of course that has always been true. But the difference now [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Today marks the 4-year anniversary of this weblog. What better way to celebrate than with a discussion of web applications.</p>
<p><a href="http://www.angrylearner.com/">Willie Abrams</a> said in a recent Campfire chat: &#8220;Web applications automatically have sync.&#8221; He hits on the fundamental principle of web applications popularity, and of course that has always been true. But the difference now is that some web apps are actually <i>fast and usable too</i>. (Gasp!)</p>
<p>The rise of rich web applications that seamlessly mix Flash or Ajax while still staying true to the roots of web architecture (REST design, open standards) has upset the traditional desktop market. I first wrote about this in <a href="http://www.manton.org/2005/12/todo_lists_and.html">&#8220;To-do lists and embracing the network&#8221;</a>, which was in a sense a subtle wake-up call to Mac developers: adapt to the always-on internet or any college drop-out with a shared server will obsolete your app after a few late nights of Rails hacking.</p>
<p>But it frustrates me to see such praise given to web applications that, were they traditional, native apps, they&#8217;d be laughed away to obscurity or ignored. Ajax is a huge advancement, but that doesn&#8217;t mean that every application works well for the web. I&#8217;m sure Google engineers spent an incredible amount of work on <a href="http://www.techcrunch.com/2006/02/22/google-pages-released/">Google Pages</a>, but compare it to Apple&#8217;s iWeb and it becomes obvious how weak web application interfaces still are.</p>
<p>Luckily some people are working through the really tough problems. <a href="http://spaces.msn.com/rayozzie/blog/cns!FB3017FBB9B2E142!285.entry">Ray Ozzie&#8217;s Live Clipboard</a> may be the start of a whole new shift in web app functionality, allowing data to move between web sites and even out of the browser. But true drag-and-drop of structured data between a native app and a web site is still a long way off.</p>
<p>Let&#8217;s make some lists, starting with the good.</p>
<ul>
<li>Good web applications are data-driven, multiuser, and use URLs everywhere.</li>
<li>There is some key component that is about the <i>browsing experience</i>. That might be sifting through large amounts of data, viewing old logs, finding people.</li>
<li>The kind of data requires an adaptable user interface, not something with a strict set of traditional widgets. HTML is perfect for this.</li>
</ul>
<p>On the other side are web applications that might be built by a team of smart people and with a great technology backend, but the application concepts are confused. They don&#8217;t know if they belong in a web browser or on the desktop.</p>
<ul>
<li>Mediocre web applications think that a single web browser window is an entire windowing system with movable child windows.</li>
<li>No features that actually have anything to do with the web. The result is that it <i>adds no value</i> to the web as a whole.</li>
<li>Trying to replace the whole Microsoft Office suite.</li>
</ul>
<p>Something else is changing in the HTML/CSS/JavaScript platform. In 2004, <a href="http://www.joelonsoftware.com/articles/APIWar.html">Joel Spolsky wrote</a> about how instead of picking Mac, Windows, or Linux APIs, developers are building for the web platform and can deploy to any user&#8217;s desktop. Cutting-edge web applications push that claim to its breaking point, as differences between Safari, Mozilla, and Internet Explorer often cause headaches for developers. It&#8217;s no surprise when Microsoft&#8217;s set of Office Live applications require Internet Explorer, but it <i>is</i> note-worthy when Google&#8217;s chat interface does not work in Safari. There is now a whole set of web applications that require the latest version of Mozilla and won&#8217;t work in anything less.</p>
<p>Five years ago we accepted that web applications were going to be useful but ultimately unfulfilling, joyless experiences. Now most web apps have risen from bad to simply mediocre. The truly great ones have a foundation and design that would still be unrivaled in a desktop app. These amazing apps are not content to reimplement an old application as a web app just to allow use from any machine, but they take it to the next step: rethink the problem, stay agile, and redesign so that it&#8217;s not just web-based, but it&#8217;s <i>actually better</i>.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2006/03/mediocrity_is_the.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
		<item>
		<title>Smart software bloat</title>
		<link>http://www.manton.org/2006/02/smart_software_bloat.html</link>
		<comments>http://www.manton.org/2006/02/smart_software_bloat.html#comments</comments>
		<pubDate>Tue, 21 Feb 2006 22:09:56 +0000</pubDate>
		<dc:creator><![CDATA[manton]]></dc:creator>
				<category><![CDATA[User Experience]]></category>
		<category><![CDATA[bloat]]></category>
		<category><![CDATA[keynote]]></category>
		<category><![CDATA[ui]]></category>

		<guid isPermaLink="false">http://www.manton.org/2006/02/smart_software_bloat.html</guid>
		<description><![CDATA[Everyone complains about software bloat. And it&#8217;s easy to see why &#8212; applications are bigger and slower than they&#8217;ve ever been, and users think the dozen features they will never use are to blame. On the Mac we are lucky to have a large number of great, small, focused tools that solve a few problems [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Everyone complains about software bloat. And it&rsquo;s easy to see why &mdash; applications are bigger and slower than they&rsquo;ve ever been, and users think the dozen features they will never use are to blame.</p>
<p>On the Mac we are lucky to have a large number of great, small, focused tools that solve a few problems well. The best of these become successful, but what then? You have to keep adding features. How do you control the software so that it becomes even more useful without feeling too packed?</p>
<p>One way is to differenciate between visible and hidden bloat. For example, Microsoft products used to have a tendency to take every major bullet point on the side of the box and make a toolbar icon for it. Even if the user only uses 5% of those features, they have easy access to far too many of them, and they needlessly have access to them all at once.</p>
<p><img src="http://www.manton.org/images/2006/keynote_sides.gif" border="0" height="147" width="215" alt="Keynote slider" align="right" /> Instead, adding features <i>in context</i> allows the application to grow without feeling too busy, and without distracting the user from the core set of features they are familiar with. The new user interface is discovered by using a new feature, and otherwise remains out of sight.</p>
<p>This point was really emphasized for me while using Keynote 3 the other day. I love the contextual floating slider when editing a shape (see image). They could have put this slider in the inspector window, but it is so infrequently used it would have remained disabled most of the time, and cluttered those panes with little benefit.</p>
]]></content:encoded>
			<wfw:commentRss>http://www.manton.org/2006/02/smart_software_bloat.html/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
		</item>
	</channel>
</rss>

<!-- Dynamic page generated in 2.464 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-12-18 17:25:55 -->
